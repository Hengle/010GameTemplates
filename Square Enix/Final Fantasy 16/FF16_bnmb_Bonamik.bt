//------------------------------------------------
//--- 010 Editor v15.0 Binary Template
//
//      File: Bonamik FlatBuffer File
//   Authors: Nenkai
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

// NOTE! This file is a flatbuffer file which is also very incomplete
// It is not supposed to be mapped out, but only did to more easily reverse up the original schema
// You should be using the schema defined here if you intend to alter the file:
// https://github.com/Nenkai/FF16Tools/blob/master/FF16Tools.Files.FlatBuffers/BNMB_BonamikBinary.fbs

typedef struct
{
    float X;
    float Y;
    float Z;
} Vec3;

typedef struct
{
    float X;
    float Y;
    float Z;
    float W;
} Vec4;

typedef struct
{
    int FieldOffsetTableNegative <format=hex, fgcolor=cRed>;
    
    FSeek(startof(FieldOffsetTableNegative) - FieldOffsetTableNegative);
    short OffsetTableSize <fgcolor=cGreen>;
    short OffsetTable[(OffsetTableSize / sizeof(ushort)) - 1] <format=hex, fgcolor=cRed>;
    FSeek(FileSize());
} FlatArkFields <bgcolor=cBlack>;

typedef struct
{
    int FieldsOffset <format=hex, fgcolor=cRed>;
    FSeek(startof(FieldsOffset) + FieldsOffset);
    
    FlatArkFields Fields;
    FSeek(FileSize());
} FlatArkHeader <bgcolor=cPurple>;

FlatArkHeader Hdr;

FSeek(Hdr.FieldsOffset + Hdr.Fields.OffsetTable[3]);
struct
{
    int DataOffset <format=hex, fgcolor=cRed>;
    FSeek(startof(DataOffset) + DataOffset);
    
    int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
    int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
    local int j = 0;
    for (j = 0; j < NumEntries; j++)
    {
        FSeek(startof(Offsets[j]) + Offsets[j]);
        struct
        {
            FlatArkFields Fields;
            
            if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[1]);
                struct
                {
                   int DataOffset <bgcolor=cBlue, format=hex>;
                   FSeek(startof(DataOffset) + DataOffset);
                   
                   struct
                   {
                       FlatArkFields Fields;
                       
                       if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[1]);
                           int m_VersionNo <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[2]);
                           int TotalSolvers <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[3]);
                           int TotalBodies <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[4]);
                           int TotalLinks <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[5]);
                           int F5 <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                       {
                           Printf("Header Unmapped F6\n");
                       }
                       
                       if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[7]);
                           int F7 <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[8]);
                           int F8 <bgcolor=cBlue>;
                       }    
                       
                       if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[9]);
                           int F9 <bgcolor=cBlue>;
                       }  
                       
                       if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[10]);
                           int F10 <bgcolor=cBlue>;
                       }  
                       
                       if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[11]);
                           int F11 <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[12]);
                           int F12 <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[13]);
                           int F13 <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[14]) && Fields.OffsetTable[14])
                       {
                           Printf("Header Unmapped F14\n");
                       }
                       
                       if (exists(Fields.OffsetTable[15]) && Fields.OffsetTable[15])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[15]);
                           int F15 <bgcolor=cBlue>;
                       }
                       
                       if (exists(Fields.OffsetTable[16]) && Fields.OffsetTable[16])
                       {
                           FSeek(startof(Fields) + Fields.OffsetTable[16]);
                           int F16 <bgcolor=cBlue>;
                       }
                       
                       if ((Fields.OffsetTableSize / 2 - 1) > 17)
                            Printf("Header Struct Larger\n");
                   } Table;
                } F1;
            }
            
            if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[2]);
                struct
                {
                    int DataOffset <bgcolor=cBlue, format=hex>;
                    
                    FSeek(startof(DataOffset) + DataOffset);
                    struct
                    {
                        FlatArkFields Fields;
                        
                        if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[1]);
                            byte F1 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                        {
                            Printf("SceneManager unmapped F2\n");
                        }
                        
                        if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[3]);
                            byte F3 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[4]);
                            int F4 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[5]);
                            float F5 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[6]);
                            int F6 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[7]);
                            Vec3 F7 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                        {
                            Printf("SceneManager unmapped F8\n");
                        }
                        
                        if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[9]);
                            int F9 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
                        {
                            Printf("SceneManager unmapped F10\n");
                        }
                        
                        if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[11]);
                            struct
                            {
                                int DataOffset <bgcolor=cBlue, format=hex>;
                                FSeek(startof(DataOffset) + DataOffset);
                                struct
                                {
                                    FlatArkFields Fields;
                                    
                                    if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                        int F1 <bgcolor=cBlue>;
                                    }
                                    
                                    if ((Fields.OffsetTableSize / 2 - 1) > 2)
                                        Printf("SceneManager F11 Struct Larger\n");
                                } Table;
                            } F11;
                        }
                        
                        if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[12]);
                            int F12 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[13]);
                            int F13 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[14]) && Fields.OffsetTable[14])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[14]);
                            int F14 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[15]) && Fields.OffsetTable[15])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[15]);
                            int F15 <bgcolor=cBlue>;
                        }
                        
                        if (exists(Fields.OffsetTable[16]) && Fields.OffsetTable[16])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[16]);
                            struct
                            {
                                int DataOffset <bgcolor=cBlue, format=hex>;
                                FSeek(startof(DataOffset) + DataOffset);
                                struct
                                {
                                    int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                    int Values[NumEntries] <format=hex, bgcolor=cBlue>;
                                } Table;
                            } F16;
                        }
                        
                        if (exists(Fields.OffsetTable[17]) && Fields.OffsetTable[17])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[17]);
                            struct
                            {
                                int DataOffset <bgcolor=cBlue, format=hex>;
                                FSeek(startof(DataOffset) + DataOffset);
                                struct
                                {
                                    int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                    int Values[NumEntries] <format=hex, bgcolor=cBlue>;
                                } Table;
                            } F17;
                        }
                        
                        if (exists(Fields.OffsetTable[18]) && Fields.OffsetTable[18])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[18]);
                            struct
                            {
                                int DataOffset <bgcolor=cBlue, format=hex>;
                                FSeek(startof(DataOffset) + DataOffset);
                                struct
                                {
                                    int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                    int Values[NumEntries] <format=hex, bgcolor=cBlue>;
                                } Table;
                            } F18;
                        }
                        
                        if (exists(Fields.OffsetTable[19]) && Fields.OffsetTable[19])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[19]);
                            struct
                            {
                                int DataOffset <bgcolor=cBlue, format=hex>;
                                FSeek(startof(DataOffset) + DataOffset);
                                struct
                                {
                                    int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                    int Values[NumEntries] <format=hex, bgcolor=cBlue>;
                                } Table;
                            } F19;
                        }
                        
                        if (exists(Fields.OffsetTable[20]) && Fields.OffsetTable[20])
                        {
                            FSeek(startof(Fields) + Fields.OffsetTable[20]);
                            byte F20 <bgcolor=cBlue>;
                        }
                        
                        if ((Fields.OffsetTableSize / 2 - 1) > 21)
                            Printf("SceneManager Struct Larger\n");
                    } Table;
                } F2_SceneManagerBinaryBin;
            }
            
            if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[3]);
                struct
                {
                    int DataOffset <bgcolor=cBlue, format=hex>;
                    FSeek(startof(DataOffset) + DataOffset);
                    struct
                    {
                        int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                        int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                        local int j = 0;
                        for (j = 0; j < NumEntries; j++)
                        {
                            FSeek(startof(Offsets[j]) + Offsets[j]);
                            struct
                            {
                                FlatArkFields Fields;
                                
                                if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                    struct
                                    {
                                       uint NameOffset <bgcolor=cYellow>;
                                       FSeek(startof(NameOffset) + NameOffset);
                                       uint strLen <bgcolor=cYellow>;
                                       char str[strLen] <bgcolor=cYellow>;
                                    } F1_GroupName;
                                }
                                
                                if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[2]);
                                    int F2 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[3]);
                                    Printf("Solvers Unmapped F3\n");
                                }
                                
                                if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[4]);
                                    byte F4_IsEnable <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[5]);
                                    byte F5_IsUseConeSEQ <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[6]);
                                    Printf("Solvers Unmapped F6\n");
                                }
                                
                                if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[7]);
                                    byte F7 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[8]);
                                    byte F8 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[9]);
                                    float m_LODdistance <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[10]);
                                    Printf("Solvers Unmapped F10\n");
                                }
                                
                                if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[11]);
                                    int F11 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[12]);
                                    int F12 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[13]);
                                    int F13 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[14]) && Fields.OffsetTable[14])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[14]);
                                    int F14_ColIter <bgcolor=cBlue>;
                                }
                                
                                if ((Fields.OffsetTableSize / 2 - 1) > 15)
                                    Printf("Solvers Struct Larger\n");
                            } BonamikSolverDesc <read=F1_GroupName.str>;
                        }
                    } Table;
                } F3_Solvers;
            }
            
            if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[4]);
                struct
                {
                    int DataOffset <bgcolor=cBlue, format=hex>;
                    FSeek(startof(DataOffset) + DataOffset);
                    struct
                    {
                        int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                        int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                        local int j = 0;
                        for (j = 0; j < NumEntries; j++)
                        {
                            FSeek(startof(Offsets[j]) + Offsets[j]);
                            struct
                            {
                                FlatArkFields Fields;
                                
                                if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                    int F1 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[2]);
                                    int F2 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[3]);
                                    int F3 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[4]);
                                    int F4 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[5]);
                                    byte F5 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[6]);
                                    byte F6 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[7]);
                                    byte F7 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[8]);
                                    float F8 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[9]);
                                    float F9 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[10]);
                                    float F10 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[11]);
                                    float F11 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[12]);
                                    float F12 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[13]);
                                    float F13 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[14]) && Fields.OffsetTable[14])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[14]);
                                    float F14 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[15]) && Fields.OffsetTable[15])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[15]);
                                    float F15 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[16]) && Fields.OffsetTable[16])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[16]);
                                    float F16 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[17]) && Fields.OffsetTable[17])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[17]);
                                    Printf("Bodies Unmapped F17\n");
                                }
                                
                                if (exists(Fields.OffsetTable[18]) && Fields.OffsetTable[18])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[18]);
                                    Printf("Bodies Unmapped F18\n");
                                }
                                
                                if (exists(Fields.OffsetTable[19]) && Fields.OffsetTable[19])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[19]);
                                    int F19 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[20]) && Fields.OffsetTable[20])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[20]);
                                    int F20 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[21]) && Fields.OffsetTable[21])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[21]);
                                    Vec3 F21 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[22]) && Fields.OffsetTable[22])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[22]);
                                    Vec4 F22 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[23]) && Fields.OffsetTable[23])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[23]);
                                    Vec3 F23 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[24]) && Fields.OffsetTable[24])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[24]);
                                    Vec3 F24 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[25]) && Fields.OffsetTable[25])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[25]);
                                    Vec4 F25 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[26]) && Fields.OffsetTable[26])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[26]);
                                    struct
                                    {
                                        int DataOffset <bgcolor=cBlue, format=hex>;
                                        FSeek(startof(DataOffset) + DataOffset);
                                        struct
                                        {
                                            FlatArkFields fields;
                                            
                                            if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[1]);
                                                int F1 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[2]);
                                                float F2 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[3]) && fields.OffsetTable[3])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[3]);
                                                float F3 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if ((fields.OffsetTableSize / 2 - 1) > 4)
                                                Printf("Bodies F26 Struct Larger\n");
                                        } Table;
                                    } F26;
                                }
                                
                                if (exists(Fields.OffsetTable[27]) && Fields.OffsetTable[27])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[27]);
                                    struct
                                    {
                                        int DataOffset <bgcolor=cBlue, format=hex>;
                                        FSeek(startof(DataOffset) + DataOffset);
                                        struct
                                        {
                                            FlatArkFields fields;
                                            
                                            if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[1]);
                                                float F1 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[2]);
                                                float F2 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[3]) && fields.OffsetTable[3])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[3]);
                                                float F3 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[4]) && fields.OffsetTable[4])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[4]);
                                                float F4 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[5]) && fields.OffsetTable[5])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[5]);
                                                float F5 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if ((fields.OffsetTableSize / 2 - 1) > 6)
                                                Printf("Bodies F27 Struct Larger\n");
                                        } Table;
                                    } F27;
                                }
                                
                                if (exists(Fields.OffsetTable[28]) && Fields.OffsetTable[28])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[28]);
                                    struct
                                    {
                                        int DataOffset <bgcolor=cBlue, format=hex>;
                                        FSeek(startof(DataOffset) + DataOffset);
                                        struct
                                        {
                                            FlatArkFields fields;
                                            
                                            if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[1]);
                                                uint F1 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                            if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[2]);
                                                Printf("Bodies F28 Unmapped F2\n");
                                            }
                                            
                                            if (exists(fields.OffsetTable[3]) && fields.OffsetTable[3])
                                            {
                                                FSeek(startof(fields) + fields.OffsetTable[3]);
                                                byte F3 <bgcolor=cBlue, format=hex>;
                                            }
                                            
                                             if ((fields.OffsetTableSize / 2 - 1) > 4)
                                                Printf("Bodies F28 Struct Larger\n");
                                        } Table;
                                    } F28;
                                }
                                
                                if (exists(Fields.OffsetTable[29]) && Fields.OffsetTable[29])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[29]);
                                    Printf("Bodies Unmapped F29\n");
                                }
                                
                                if (exists(Fields.OffsetTable[30]) && Fields.OffsetTable[30])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[30]);
                                    Printf("Bodies Unmapped F30\n");
                                }
                                
                                if (exists(Fields.OffsetTable[31]) && Fields.OffsetTable[31])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[31]);
                                    struct
                                    {
                                        int DataOffset <bgcolor=cBlue, format=hex>;
                                        FSeek(startof(DataOffset) + DataOffset);
                                        struct
                                        {
                                            int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                            int Values[NumEntries] <bgcolor=cBlue>;
                                            
                                            int test;
                                        } Table;
                                        
                                        // TODO.
                                    } F31;
                                }
                                
                                if (exists(Fields.OffsetTable[32]) && Fields.OffsetTable[32])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[32]);
                                    byte F32 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[33]) && Fields.OffsetTable[33])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[33]);
                                    float F33 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[34]) && Fields.OffsetTable[34])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[34]);
                                    float F34 <bgcolor=cBlue>;
                                }
                                
                                if ((Fields.OffsetTableSize / 2 - 1) > 35)
                                   Printf("Bodies Struct Larger\n");
                            } Entry;
                        }
                    } Table;
                } F4_Bodies;
                
                if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                {
                    FSeek(startof(Fields) + Fields.OffsetTable[5]);
                    struct
                    {
                        int DataOffset <bgcolor=cBlue, format=hex>;
                        FSeek(startof(DataOffset) + DataOffset);
                        struct
                        {
                            int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                            int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                            local int j = 0;
                            for (j = 0; j < NumEntries; j++)
                            {
                                FSeek(startof(Offsets[j]) + Offsets[j]);
                                struct
                                {
                                    FlatArkFields Fields;

                                    if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                        int F1 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[2]);
                                        int F2 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[3]);
                                        int F3 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[4]);
                                        int F4 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[5]);
                                        int F5 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[6]);
                                        int F6 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[7]);
                                        byte F7 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[8]);
                                        byte F8 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[9]);
                                        byte F9 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[10]);
                                        byte F10 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[11]);
                                        byte F11 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[12]);
                                        byte F12 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[13]);
                                        float F13 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[14]) && Fields.OffsetTable[14])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[14]);
                                        float F14 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[15]) && Fields.OffsetTable[15])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[15]);
                                        float F15 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[16]) && Fields.OffsetTable[16])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[16]);
                                        float F16 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[17]) && Fields.OffsetTable[17])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[17]);
                                        float F17 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[18]) && Fields.OffsetTable[18])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[18]);
                                        float F18 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[19]) && Fields.OffsetTable[19])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[19]);
                                        float F19 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[20]) && Fields.OffsetTable[20])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[20]);
                                        float F20 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[21]) && Fields.OffsetTable[21])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[21]);
                                        Vec3 F21 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[22]) && Fields.OffsetTable[22])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[22]);
                                        Vec3 F22 <bgcolor=cBlue>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[23]) && Fields.OffsetTable[23])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[23]);
                                        struct
                                        {
                                            uint DataOffset <bgcolor=cBlue>;
                                            FSeek(startof(DataOffset) + DataOffset);
                                            
                                            struct
                                            {
                                                FlatArkFields fields;
                                                
                                                if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[1]);
                                                    Printf("Unmapped F1\n");
                                                }
                                                
                                                if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[2]);
                                                    float F2  <bgcolor=cBlue>;
                                                }

                                                 if (exists(fields.OffsetTable[3]) && fields.OffsetTable[3])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[3]);
                                                    float F3 <bgcolor=cBlue>;
                                                }
                                            } Table;
                                        } F23;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[24]) && Fields.OffsetTable[24])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[24]);
                                        struct
                                        {
                                            uint DataOffset <bgcolor=cBlue>;
                                            FSeek(startof(DataOffset) + DataOffset);
                                            
                                            struct
                                            {
                                                FlatArkFields fields;
                                                
                                                if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[1]);
                                                    float F1 <bgcolor=cBlue>;
                                                }
                                                
                                                if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[2]);
                                                    float F2 <bgcolor=cBlue>;
                                                }

                                                 if ((fields.OffsetTableSize / 2 - 1) > 3)
                                                    Printf("Links F24 Struct Larger\n");
                                            } Table;
                                        } F24;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[25]) && Fields.OffsetTable[25])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[25]);
                                        struct
                                        {
                                            uint DataOffset <bgcolor=cBlue>;
                                            FSeek(startof(DataOffset) + DataOffset);
                                            
                                            struct
                                            {
                                                FlatArkFields fields;
                                                
                                                if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[1]);
                                                    float F1 <bgcolor=cBlue>;
                                                }
                                                
                                                if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                                {
                                                    FSeek(startof(fields) + fields.OffsetTable[2]);
                                                    float F2 <bgcolor=cBlue>;
                                                }

                                                 if ((fields.OffsetTableSize / 2 - 1) > 3)
                                                    Printf("Links F25 Struct Larger\n");
                                            } Table;
                                        } F25;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[26]) && Fields.OffsetTable[26])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[26]);
                                        struct
                                        {
                                           uint NameOffset <bgcolor=cYellow>;
                                           FSeek(startof(NameOffset) + NameOffset);
                                           uint strLen <bgcolor=cYellow>;
                                           char str[strLen] <bgcolor=cYellow>;
                                        } F26 <read=str>;
                                    }
                                    
                                    if (exists(Fields.OffsetTable[27]) && Fields.OffsetTable[27])
                                    {
                                        FSeek(startof(Fields) + Fields.OffsetTable[27]);
                                        struct
                                        {
                                           uint NameOffset <bgcolor=cYellow>;
                                           FSeek(startof(NameOffset) + NameOffset);
                                           uint strLen <bgcolor=cYellow>;
                                           char str[strLen] <bgcolor=cYellow>;
                                        } F27 <read=str>;
                                    }
                                    
                                    if ((Fields.OffsetTableSize / 2 - 1) > 28)
                                       Printf("Links Struct Larger\n");
                                } Entry;
                            }
                        } Table;
                    } F5_Links;
                }
            }
            
            if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[6]);
                struct
                {
                    int DataOffset <bgcolor=cBlue, format=hex>;
                    FSeek(startof(DataOffset) + DataOffset);
                    struct
                    {
                        int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                        int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                        local int j = 0;
                        for (j = 0; j < NumEntries; j++)
                        {
                            FSeek(startof(Offsets[j]) + Offsets[j]);
                            struct
                            {
                                FlatArkFields Fields;

                                if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                    int F1 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[2]);
                                    int F2 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[3]);
                                    int F3 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[4]);
                                    int F4 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[5]);
                                    int F5 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[6]);
                                    float F6 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[7]);
                                    Printf("Unmapped plane F7");
                                }
                                
                                if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[8]);
                                    int F8 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[9]);
                                    byte F9 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[10]);
                                    struct
                                    {
                                       uint NameOffset <bgcolor=cYellow>;
                                       FSeek(startof(NameOffset) + NameOffset);
                                       uint strLen <bgcolor=cYellow>;
                                       char str[strLen] <bgcolor=cYellow>;
                                    } F10 <read=str>;
                                }
                                
                                if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[11]);
                                    struct
                                    {
                                       uint NameOffset <bgcolor=cYellow>;
                                       FSeek(startof(NameOffset) + NameOffset);
                                       uint strLen <bgcolor=cYellow>;
                                       char str[strLen] <bgcolor=cYellow>;
                                    } F11 <read=str>;
                                }
                                
                                if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[12]);
                                    struct
                                    {
                                       uint NameOffset <bgcolor=cYellow>;
                                       FSeek(startof(NameOffset) + NameOffset);
                                       uint strLen <bgcolor=cYellow>;
                                       char str[strLen] <bgcolor=cYellow>;
                                    } F12 <read=str>;
                                }
                                
                                if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[13]);
                                    struct
                                    {
                                        int DataOffset <bgcolor=cBlue, format=hex>;
                                        FSeek(startof(DataOffset) + DataOffset);
                                        struct
                                        {
                                            int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                            int Values[NumEntries] <format=hex, bgcolor=cBlue>;
                                        } Table;
                                    } F13;
                                }
                                
                                if ((Fields.OffsetTableSize / 2 - 1) > 14)
                                   Printf("Planes Struct Larger\n");
                            } Entry;
                        }
                    } Table;
                } F6_Planes;
            }
            
            
            if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[7]);
                struct
                {
                    int DataOffset <bgcolor=cBlue, format=hex>;
                    FSeek(startof(DataOffset) + DataOffset);
                    struct
                    {
                        int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                        int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                        local int j = 0;
                        for (j = 0; j < NumEntries; j++)
                        {
                            FSeek(startof(Offsets[j]) + Offsets[j]);
                            struct
                            {
                                Printf("TODO F7\n");
                            } Entry;
                        }
                    } Table;
                } F7_ShapeMatchings;
            }
            
            if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
            {
                FSeek(startof(Fields) + Fields.OffsetTable[8]);
                struct
                {
                    int DataOffset <bgcolor=cBlue, format=hex>;
                    FSeek(startof(DataOffset) + DataOffset);
                    struct
                    {
                        int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                        int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                        local int j = 0;
                        for (j = 0; j < NumEntries; j++)
                        {
                            FSeek(startof(Offsets[j]) + Offsets[j]);
                            struct
                            {
                                FlatArkFields Fields;
                                
                                if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                    int F1 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[2]);
                                    float F2 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[3]);
                                    int F3 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[4]);
                                    int F4 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[5]);
                                    float F5 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[6]);
                                    float F6 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[7]);
                                    float F7 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[8]);
                                    float F8 <bgcolor=cBlue>;
                                }
                                
                                if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
                                {
                                    FSeek(startof(Fields) + Fields.OffsetTable[9]);
                                    float F9 <bgcolor=cBlue>;
                                }                            
                            } Entry;
                        }
                    } Table;
                } F8_Possessions;
            }
            
            if ((Fields.OffsetTableSize / 2 - 1) > 9)
                Printf("Main Bin F3 Struct Larger\n");
        } Entry;
    }
} F3_BonamikResource;

FSeek(Hdr.FieldsOffset + Hdr.Fields.OffsetTable[4]);
struct
{
    int DataOffset <format=hex, fgcolor=cRed>;
    FSeek(startof(DataOffset) + DataOffset);

    struct
    {
        FlatArkFields Fields;
        
        if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[1]);
            struct
            {
                int DataOffset <bgcolor=cBlue, format=hex>;
                FSeek(startof(DataOffset) + DataOffset);
                struct
                {
                    FlatArkFields Fields;
                    
                    if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[1]);
                        int F1 <bgcolor=cBlue>;
                    }
                    
                    if ((Fields.OffsetTableSize / 2 - 1) > 2)
                        Printf("F1 Struct Larger\n");
                } Table;
            } F1;
        }
        
        if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[2]);
            float F2 <bgcolor=cBlue>;
        }
        
        if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[3]);
            float F3 <bgcolor=cBlue>;
        }
        
        if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[4]);
            byte F4 <bgcolor=cBlue>;
        }
        
        if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[5]);
            struct
            {
                int DataOffset <bgcolor=cBlue, format=hex>;
                FSeek(startof(DataOffset) + DataOffset);
                struct
                {
                    FlatArkFields Fields;
                    
                    if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[1]);
                        byte F1 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[2]);
                        byte F2 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[3]);
                        byte F3 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[4]);
                        float F4 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[5]);
                        float F5 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[6]);
                        short F6 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[7]);
                        short F7 <bgcolor=cBlue>;
                    }
                    
                    if ((Fields.OffsetTableSize / 2 - 1) > 8)
                        Printf("F7 Struct Larger\n");
                } Table;
            } F5;
        }
        
        if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[6]);
            struct
            {
                int DataOffset <bgcolor=cBlue, format=hex>;
                FSeek(startof(DataOffset) + DataOffset);
                
                int Weird <bgcolor=cBlue>; // TODO
            } F6;
        }
        
        if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[7]);
            struct
            {
                int DataOffset <bgcolor=cBlue, format=hex>;
                FSeek(startof(DataOffset) + DataOffset);
                
                struct
                {
                    FlatArkFields Fields;
                    
                    if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[1]);
                        int F1 <bgcolor=cBlue>;
                    }
                    
                    if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[2]);
                        int F2 <bgcolor=cBlue, format=hex>;
                    }
                    
                    if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[3]);
                        Printf("Unmapped F3\n");
                    }
                    
                    if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[4]);
                        struct
                        {
                            int DataOffset <bgcolor=cBlue, format=hex>;
                            FSeek(startof(DataOffset) + DataOffset);
                            struct
                            {
                                int NumEntries <fgcolor=cGreen, bgcolor=cBlue>;
                                int Offsets[NumEntries] <format=hex, fgcolor=cRed>;
                                local int j = 0;
                                for (j = 0; j < NumEntries; j++)
                                {
                                    FSeek(startof(Offsets[j]) + Offsets[j]);
                                    struct
                                    {
                                        FlatArkFields Fields;
                                        
                                        if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                                        {
                                            FSeek(startof(Fields) + Fields.OffsetTable[1]);
                                            struct
                                            {
                                               uint NameOffset <bgcolor=cYellow>;
                                               FSeek(startof(NameOffset) + NameOffset);
                                               uint strLen <bgcolor=cYellow>;
                                               char str[strLen] <bgcolor=cYellow>;
                                            } F1;
                                        }
                                        
                                        if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                                        {
                                            FSeek(startof(Fields) + Fields.OffsetTable[2]);
                                            
                                            struct
                                            {
                                                int DataOffset <bgcolor=cBlue, format=hex>;
                                                FSeek(startof(DataOffset) + DataOffset);
                                                
                                                struct
                                                {
                                                    FlatArkFields fields;
                                                    if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                                    {
                                                        FSeek(startof(fields) + fields.OffsetTable[1]);
                                                        float F1 <bgcolor=cBlue, format=hex>;
                                                    }
                                                    
                                                    if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                                    {
                                                        FSeek(startof(fields) + fields.OffsetTable[2]);
                                                        float F2 <bgcolor=cBlue, format=hex>;
                                                    }
                                                    
                                                    if (exists(fields.OffsetTable[3]) && fields.OffsetTable[3])
                                                    {
                                                        FSeek(startof(fields) + fields.OffsetTable[3]);
                                                        float F3 <bgcolor=cBlue, format=hex>;
                                                    }
                                                    
                                                    if ((fields.OffsetTableSize / 2 - 1) > 4)
                                                        Printf("Struct Larger\n");
                                                } Table;
                                            } F2;
                                        }
                                        
                                        if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                                        {
                                            FSeek(startof(Fields) + Fields.OffsetTable[3]);
                                            struct
                                            {
                                                int DataOffset <bgcolor=cBlue, format=hex>;
                                                FSeek(startof(DataOffset) + DataOffset);
                                                
                                                struct
                                                {
                                                    FlatArkFields fields;
                                                    if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                                    {
                                                        Printf("Unmapped F1\n");
                                                    }
                                                    
                                                    if (exists(fields.OffsetTable[2]) && fields.OffsetTable[2])
                                                    {
                                                        FSeek(startof(fields) + fields.OffsetTable[2]);
                                                        float F2 <bgcolor=cBlue, format=hex>;
                                                    }
                                                    
                                                    if (exists(fields.OffsetTable[3]) && fields.OffsetTable[3])
                                                    {
                                                        FSeek(startof(fields) + fields.OffsetTable[3]);
                                                        float F3 <bgcolor=cBlue, format=hex>;
                                                    }
                                                    
                                                    if ((fields.OffsetTableSize / 2 - 1) > 4)
                                                        Printf("Struct Larger\n");
                                                } Table;
                                            } F3;
                                        }
                                        
                                        if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                                        {
                                            FSeek(startof(Fields) + Fields.OffsetTable[4]);
                                            struct
                                            {
                                                int DataOffset <bgcolor=cBlue, format=hex>;
                                                FSeek(startof(DataOffset) + DataOffset);
                                                
                                                struct
                                                {
                                                    FlatArkFields fields;
                                                    if (exists(fields.OffsetTable[1]) && fields.OffsetTable[1])
                                                    {
                                                        Printf("Unmapped F1\n");
                                                    }

                                                    if ((fields.OffsetTableSize / 2 - 1) > 1)
                                                        Printf("Struct Larger\n");
                                                } Table;
                                            } F4;
                                        }
                                        
                                        if ((Fields.OffsetTableSize / 2 - 1) > 5)
                                           Printf("Struct Larger\n");
                                    } Entry;
                                }
                            } Table;
                        } F4;
                    }
                    
                    if (exists(Fields.OffsetTable[5]) && Fields.OffsetTable[5])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[5]);
                        Printf("Unmapped F5\n");
                    }
                    
                    if (exists(Fields.OffsetTable[6]) && Fields.OffsetTable[6])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[6]);
                        Printf("Unmapped F6\n");
                    }
                    
                    if (exists(Fields.OffsetTable[7]) && Fields.OffsetTable[7])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[7]);
                        struct
                        {
                            int DataOffset <format=hex, fgcolor=cRed>;
                            FSeek(startof(DataOffset) + DataOffset);
                            
                            struct
                            {
                                int Weird <bgcolor=cBlue>; // TODO/FIX
                            } Table;
                        } F7;
                    }
                    
                    if ((Fields.OffsetTableSize / 2 - 1) > 8)
                       Printf("Struct Larger\n");
                } Table;
            } F7;
        }
        
        if (exists(Fields.OffsetTable[8]) && Fields.OffsetTable[8])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[8]);
            Printf("Unmapped F8\n");
        }
        
        if (exists(Fields.OffsetTable[9]) && Fields.OffsetTable[9])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[9]);
            Printf("Unmapped F9\n");
        }
        
        if (exists(Fields.OffsetTable[10]) && Fields.OffsetTable[10])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[10]);
            Printf("Unmapped F10\n");
        }
        
        if (exists(Fields.OffsetTable[11]) && Fields.OffsetTable[11])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[11]);
            Printf("Unmapped F11\n");
        }
        
        if (exists(Fields.OffsetTable[12]) && Fields.OffsetTable[12])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[12]);
            Printf("Unmapped F12\n");
        }
        
        if (exists(Fields.OffsetTable[13]) && Fields.OffsetTable[13])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[13]);
            Printf("Unmapped F13\n");
        }
        
        if (exists(Fields.OffsetTable[14]) && Fields.OffsetTable[14])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[14]);
            Printf("Unmapped F14\n");
        }
        
        if (exists(Fields.OffsetTable[15]) && Fields.OffsetTable[15])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[15]);
            Printf("Unmapped F15\n");
        }
        
        if (exists(Fields.OffsetTable[16]) && Fields.OffsetTable[16])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[16]);
            float F16 <bgcolor=cBlue>;
        }
        
        if (exists(Fields.OffsetTable[17]) && Fields.OffsetTable[17])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[17]);
            byte F17 <bgcolor=cBlue>;
        }
        
        if (exists(Fields.OffsetTable[18]) && Fields.OffsetTable[18])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[18]);
            Printf("Unmapped F18\n");
        }
        
        if (exists(Fields.OffsetTable[19]) && Fields.OffsetTable[19])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[19]);
            Printf("Unmapped F19\n");
        }
        
        if (exists(Fields.OffsetTable[20]) && Fields.OffsetTable[20])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[20]);
            Printf("Unmapped F20\n");
        }
        
        if (exists(Fields.OffsetTable[21]) && Fields.OffsetTable[21])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[21]);
            Printf("Unmapped F21\n");
        }
        
        if (exists(Fields.OffsetTable[22]) && Fields.OffsetTable[22])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[22]);
            struct
            {
                int DataOffset <format=hex, fgcolor=cRed>;
                FSeek(startof(DataOffset) + DataOffset);
                
                struct
                {
                    FlatArkFields Fields;
                    
                    if (exists(Fields.OffsetTable[1]) && Fields.OffsetTable[1])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[1]);
                        Printf("Unmapped F1\n");
                    }
                    
                    if (exists(Fields.OffsetTable[2]) && Fields.OffsetTable[2])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[2]);
                        int F2;
                        Printf("Check array F4\n");
                    }
                    
                    if (exists(Fields.OffsetTable[3]) && Fields.OffsetTable[3])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[3]);
                        Printf("Unmapped F3\n");
                    }
                    
                    if (exists(Fields.OffsetTable[4]) && Fields.OffsetTable[4])
                    {
                        FSeek(startof(Fields) + Fields.OffsetTable[4]);
                        int F4;
                        Printf("Check array F4\n");
                    }
                    
                    if ((Fields.OffsetTableSize / 2 - 1) > 5)
                       Printf("Struct Larger\n");
                } Table;
            } F22;
        }
        
        if (exists(Fields.OffsetTable[23]) && Fields.OffsetTable[23])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[23]);
            Printf("Unmapped F23\n");
        }
        
        if (exists(Fields.OffsetTable[24]) && Fields.OffsetTable[24])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[24]);
            Printf("Unmapped F24\n");
        }
        
        if (exists(Fields.OffsetTable[25]) && Fields.OffsetTable[25])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[25]);
            Printf("Unmapped F25\n");
        }
        
        if (exists(Fields.OffsetTable[26]) && Fields.OffsetTable[26])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[26]);
            Printf("Unmapped F26\n");
        }
        
        if (exists(Fields.OffsetTable[27]) && Fields.OffsetTable[27])
        {
            FSeek(startof(Fields) + Fields.OffsetTable[27]);
            byte F27 <bgcolor=cBlue>;
        }
        
        if ((Fields.OffsetTableSize / 2 - 1) > 28)
           Printf("Links Struct Larger\n");
    } test;
    
} F4;
